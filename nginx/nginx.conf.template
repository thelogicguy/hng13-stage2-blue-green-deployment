# Worker configuration
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format - includes upstream information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" upstream: $upstream_addr '
                    'upstream_status: $upstream_status';

    access_log /var/log/nginx/access.log main;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Upstream definitions - Blue/Green pools
    upstream backend {
        # Primary server (controlled by ACTIVE_POOL)
        # ${ACTIVE_POOL} will be replaced with 'blue' or 'green'
        server app_${ACTIVE_POOL}:${PORT} max_fails=2 fail_timeout=10s;
        
        # Backup server (opposite of ACTIVE_POOL)
        # If ACTIVE_POOL=blue, this becomes app_green; if green, becomes app_blue
        server app_${BACKUP_POOL}:${PORT} backup max_fails=2 fail_timeout=10s;
    }

    server {
        listen 80;
        server_name localhost;

        # Proxy timeouts - tight for fast failover
        proxy_connect_timeout 2s;      # Time to establish connection
        proxy_send_timeout 3s;         # Time to send request to upstream
        proxy_read_timeout 3s;         # Time to read response from upstream
        
        # Retry configuration
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;   # Try primary, then backup
        proxy_next_upstream_timeout 5s; # Total time for all retries

        # Preserve original headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Main application endpoint
        location / {
            proxy_pass http://backend;
            
            # Buffer settings for better performance
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Health check endpoint (for external monitoring)
        location /healthz {
            access_log off;
            proxy_pass http://backend/healthz;
        }

        # Version endpoint
        location /version {
            proxy_pass http://backend/version;
        }
    }
}